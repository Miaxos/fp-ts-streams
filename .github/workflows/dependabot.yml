name: Dependabot automation

on:
  pull_request_target:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'

    name: 'Auto approve when needed'

    steps:
    - name: 'Set fp51-bot as assignee'
      uses: actions/github-script@v3
      with:
        github-token: "${{ secrets.TOKEN_REPO_WRITE }}"
        script: |
          await github.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            assignees: ['fp51-bot']
          });

    - name: 'Approve dependabot PRs'
      uses: actions/github-script@v3
      with:
        github-token: "${{ secrets.TOKEN_REPO_WRITE }}"
        script: |
          github.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
            event: "APPROVE",
            body: '![approve gif](https://media.giphy.com/media/8RxCFgu88jUbe/giphy.gif)',
          });

    - name: 'Activate auto-merge'
      uses: actions/github-script@v3
      with:
        github-token: "${{ secrets.TOKEN_REPO_WRITE }}"
        script: |
            const findPullRequestQuery = `
              query findPullRequest($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    id
                  }
                }
              }
            `

            const result = await github.graphql(findPullRequestQuery, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: context.payload.pull_request.number,
            })

            const {
              repository: {
                pullRequest: {
                  id: pullRequestId
                }
              }
            } = result

            const query = `
              mutation enableAutoMerge($id: String!) {
                enablePullRequestAutoMerge(input: { pullRequestId: $id }) {
                  pullRequest {
                    id
                  }
                }
            }`;

            await github.graphql(query, {
              id: pullRequestId
            })
